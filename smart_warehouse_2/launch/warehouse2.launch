<?xml version="1.0" encoding="UTF-8"?>

<launch>
  <arg name="paused" default="false" doc="Start gazebo in paused mode" />
  
 
  <arg name="world"  default="small_office"/>  <!-- empty, small_office, ... (see ../worlds) -->
  <arg name="robot"  default="full"/>         <!--     full, lower_body, foot -->
  <arg name="gzpose" default="-x 0.0 -y 0.0 -z 0.0 -R 0.0 -P 0.0 -Y 0.0"/>
  <arg name="gui" default="true"/>
  <arg name="debug" default="false"/>
  <arg name="abb_z" default="0"/>
  <arg name="abb_x" default="0.5"/>
  <arg name="abb_y" default="-1.5"/>  
  <arg name="abb_yaw" default="3.14"/>


  <arg name="rgbd_z" default="2.0"/>
  <arg name="rgbd_x" default="-1.5"/>
  <arg name="rgbd_y" default="0.0"/>  
  <arg name="rgbd_yaw" default="0.0"/>
  <arg name="rgbd_pitch" default="1.57"/>
  <arg name="rgbd_roll" default="0.0"/>
  
  
  
  <arg name="Twopioneer" default="true"/>
  
  
  <!-- pioneers initial positions-->
  <arg name="p3dx_1_x" default="2.0"/>
  <arg name="p3dx_1_y" default="-4.0"/>
  
  <arg name="p3dx_2_x" default="2.0"/>
  <arg name="p3dx_2_y" default="-3.0"/>
  
  
  <!--  station parameters : notice that this are the exact pose values of the station  in the gazebo simulation, the pioneers will know how to reach it and where to stop-->
  
  <arg name="x_red" default="0"/>
  <arg name="y_red" default="9.6"/> 
  <arg name="x_blue" default="0"/>
  <arg name="y_blue" default="-9.6"/>
  
  <env name="GAZEBO_MODEL_PATH" value="$(find smart_warehouse_2)/models:$(optenv GAZEBO_MODEL_PATH)" />


<!--saving the robot and kinect Coordinates in Ros Parameter Server -->
  <param name="abb_z" value="$(arg abb_z)" />
  <param name="abb_x" value="$(arg abb_x)" />
  <param name="abb_y" value="$(arg abb_y)" />
  <param name="abb_yaw" value="$(arg abb_yaw)" />
  <param name="rgbd_z" value="$(arg rgbd_z)" />
  <param name="rgbd_x" value="$(arg rgbd_x)" />
  <param name="rgbd_y" value="$(arg rgbd_y)" />
  <param name="rgbd_yaw" value="$(arg rgbd_yaw)" />
  <param name="rgbd_roll" value="$(arg rgbd_roll)" />
  <param name="rgbd_pitch" value="$(arg rgbd_pitch)" />
  
  
  <param name="Twopioneer" value="$(arg Twopioneer)"/>
  
  <param name="p3dx_1_x" value="$(arg p3dx_1_x)"/>
  <param name="p3dx_1_y" value="$(arg p3dx_1_y)"/>
  <param name="p3dx_2_x" value="$(arg p3dx_2_x)"/>
  <param name="p3dx_2_y" value="$(arg p3dx_2_y)"/>
  
  <param name="x_red" value="$(arg x_red)"/>
  <param name="y_red" value="$(arg y_red)"/>
  <param name="x_blue" value="$(arg x_blue)"/>
  <param name="y_blue" value="$(arg y_blue)"/>
  
  <!-- remap topics to conform to ROS-I specifications -->
  <remap from="/arm_controller/follow_joint_trajectory" to="/joint_trajectory_action" />
  <remap from="/arm_controller/state" to="/feedback_states" />
  <remap from="/arm_controller/command" to="/joint_path_command"/>
  
  <!-- start up world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find smart_warehouse_2)/worlds/warehouse_2.world"/>   
		<arg name="gui" value="$(arg gui)"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>
   
    
    
  <!-- urdf xml robot description loaded on the Parameter Server, converting the xacro into a proper urdf file-->
  <include file="$(find abb_irb6640_gazebo)/launch/load_irb6640_185_280.launch" />
  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="abb_irb6640_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param robot_description -x $(arg abb_x) -y $(arg abb_y) -z $(arg abb_z) -Y $(arg abb_yaw) -model abb_irb6640_185_280" />

    <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
  output="screen">
  </node>

  <!-- init and start Gazebo ros_control interface -->
  <include file="$(find abb_irb6640_gazebo)/launch/irb6640_185_280_control.launch"/> 
  

  <include file="$(find p3dx_gazebo)/launch/p3dx.launch"> 
	<arg name="ns" value="p3dx_1" />
	<arg name="x" value="$(arg p3dx_1_x)" />
	<arg name="y" value="$(arg p3dx_1_y)" />

  </include>
  
   <group if="$(arg Twopioneer)">  
  <include file="$(find p3dx_gazebo)/launch/p3dx.launch"> 
	<arg name="ns" value="p3dx_2" />
	<arg name="x" value="$(arg p3dx_2_x)" />
	<arg name="y" value="$(arg p3dx_2_y)" />

  </include>    
  </group>
  
  <param name="rgbd_description" command="$(find xacro)/xacro '$(find smart_warehouse_2)/urdf/rgbd.xacro'" />
    <node pkg="gazebo_ros" type="spawn_model" name="rgbd_spawn_model" args="-urdf -param /rgbd_description -model camera -x $(arg rgbd_x) -y $(arg rgbd_y) -z $(arg rgbd_z) -R $(arg rgbd_roll) -P $(arg rgbd_pitch) -Y $(arg rgbd_yaw)" />
    <!--right tf transformation-->
  
  <node pkg="tf" type="static_transform_publisher" name="world_manipulator_tf" args="$(arg abb_x) $(arg abb_y) $(arg abb_z) $(arg abb_yaw) 0 0 /map /world 100" />
  
  <node pkg="tf" type="static_transform_publisher" name="world_camera_tf" args="$(arg rgbd_x) $(arg rgbd_y) $(arg rgbd_z) $(arg rgbd_yaw) $(arg rgbd_pitch) $(arg rgbd_roll) /map /sensor 100" />
  
  
  <node pkg="tf" type="static_transform_publisher" name="camera_lens_tf" args="0 0 0 -1.57 0 -1.57 /sensor /rgbd_link 100" />
  
  
</launch>
